/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.zahtev;

import domen.Administrator;
import domen.StatusZahteva;
import domen.Usluga;
import domen.Zahtev;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author USER
 */
public class FOdgovorNaZahteve extends javax.swing.JDialog {

    /**
     * Creates new form FSelektovanjeZahteva
     */
    public FOdgovorNaZahteve(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        podesiFormu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCurrentUser = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZahtev = new javax.swing.JTable();
        btnOdbijZahtev = new javax.swing.JButton();
        btnPrihvatiZahtev = new javax.swing.JButton();
        btnPosaljiOdgovore = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Trenutni korisnik:");

        txtCurrentUser.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        tblZahtev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblZahtev);

        btnOdbijZahtev.setText("Odbij zahtev");
        btnOdbijZahtev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdbijZahtevActionPerformed(evt);
            }
        });

        btnPrihvatiZahtev.setText("Prihvati zahtev");
        btnPrihvatiZahtev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrihvatiZahtevActionPerformed(evt);
            }
        });

        btnPosaljiOdgovore.setText("Sacuvaj odgovore");
        btnPosaljiOdgovore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosaljiOdgovoreActionPerformed(evt);
            }
        });

        jLabel2.setText("Filter(po nazivu usluge):");

        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnPosaljiOdgovore, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(btnOdbijZahtev, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btnPrihvatiZahtev, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFilter))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOdbijZahtev)
                    .addComponent(btnPrihvatiZahtev))
                .addGap(38, 38, 38)
                .addComponent(btnPosaljiOdgovore)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrihvatiZahtevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrihvatiZahtevActionPerformed
        odgovoriNaZahtev(StatusZahteva.PRIHVACEN);
    }//GEN-LAST:event_btnPrihvatiZahtevActionPerformed

    private void btnOdbijZahtevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdbijZahtevActionPerformed
        odgovoriNaZahtev(StatusZahteva.ODBIJEN);
    }//GEN-LAST:event_btnOdbijZahtevActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void btnPosaljiOdgovoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosaljiOdgovoreActionPerformed
        List<Zahtev> lista = (List<Zahtev>) Kontroler.getInstance().getMapa().get("odgovoreni_zahtevi");
        if(lista.isEmpty()){
            JOptionPane.showMessageDialog(this, "Lista je prazna!");
            return;
        }
        ServerskiOdgovor so = Kontroler.getInstance().odgovoriNaZahteve(lista);
        if(!so.isUspesno()){
            JOptionPane.showMessageDialog(this, so.getPoruka(), "Greska!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        JOptionPane.showMessageDialog(this, so.getPoruka(), "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_btnPosaljiOdgovoreActionPerformed

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        String filter = txtFilter.getText().trim();
        Zahtev z = new Zahtev();
        Usluga u = new Usluga();
        u.setNaziv(filter);
        z.setUsluga(u);
        List<Zahtev> lista = Kontroler.getInstance().vratiZahteve(z);
        srediUpdateUTabeliZaFilter(lista);
        ModelTabeleZahtev mtz = (ModelTabeleZahtev) tblZahtev.getModel();
        mtz.setZahtevi(lista);
    }//GEN-LAST:event_txtFilterKeyReleased
    private void odgovoriNaZahtev(StatusZahteva status) {
        int row = tblZahtev.getSelectedRow();
        if (row != -1) {
            ModelTabeleZahtev mtz = (ModelTabeleZahtev) tblZahtev.getModel();
            Zahtev zahtev = mtz.getZahtevi().get(row);
            Administrator a = (Administrator) Kontroler.getInstance().getMapa().get("admin");
            zahtev.setAdministrator(a);
            zahtev.setDatumOdgovora(new Date());
            zahtev.setStatusZahteva(status);

            mtz.azurirajZahtev(zahtev);
            List<Zahtev> lista = (List<Zahtev>) Kontroler.getInstance().getMapa().get("odgovoreni_zahtevi");
            lista.add(zahtev);
            Kontroler.getInstance().getMapa().put("odgovoreni_zahtevi", lista);

            JOptionPane.showMessageDialog(this, "Zahtev " + status.name() + "!", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    private void podesiFormu() {
        setLocationRelativeTo(null);
        Administrator a = (Administrator) Kontroler.getInstance().getMapa().get("admin");
        txtCurrentUser.setText(a.toString());

        srediTabeluZahteva();
        popuniTabeluZahteva();

        List<Zahtev> lista = new ArrayList<>();
        Kontroler.getInstance().getMapa().put("odgovoreni_zahtevi", lista);
    }

    private void srediTabeluZahteva() {
        ModelTabeleZahtev mtz = new ModelTabeleZahtev();
        tblZahtev.setModel(mtz);
    }

    private void popuniTabeluZahteva() {
        ModelTabeleZahtev mtz = (ModelTabeleZahtev) tblZahtev.getModel();
        Zahtev z = new Zahtev();

        List<Zahtev> lista = Kontroler.getInstance().vratiZahteve(z);
        mtz.setZahtevi(lista);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOdbijZahtev;
    private javax.swing.JButton btnPosaljiOdgovore;
    private javax.swing.JButton btnPrihvatiZahtev;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblZahtev;
    private javax.swing.JTextField txtCurrentUser;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables

    

    private void srediUpdateUTabeliZaFilter(List<Zahtev> lista) {
        List<Zahtev> listaOdgovorenih = (List<Zahtev>) Kontroler.getInstance().getMapa().get("odgovoreni_zahtevi");
        for(Zahtev z : listaOdgovorenih){
            if(lista.contains(z)){
                int index = lista.indexOf(z);
                Zahtev zaPromenu = lista.get(index);
                zaPromenu.setAdministrator(z.getAdministrator());
                zaPromenu.setStatusZahteva(z.getStatusZahteva());
                zaPromenu.setDatumOdgovora(z.getDatumOdgovora());
            }
        }
    }

}
