/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.usluga;

import domen.Administrator;
import domen.Clan;
import domen.TipKorisnika;
import domen.Usluga;
import domen.VrstaUsluge;
import forme.FormMode;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleClan;
import modeli.ModelTabeleUsluga;
import transfer.ServerskiOdgovor;

/**
 *
 * @author USER
 */
public class FSelektovanjeUsluge extends javax.swing.JDialog {

    /**
     * Creates new form FSelektovanjeUsluge
     */
    public FSelektovanjeUsluge(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        podesiFormu();
        srediTabeluUsluga();
        podesiPopunjavanjeTabele();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTrenutniKorisnik = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCurrentUser = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsluga = new javax.swing.JTable();
        btnPonisti = new javax.swing.JButton();
        btnIzaberi = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Trenutni korisnik: ");

        txtCurrentUser.setEnabled(false);

        javax.swing.GroupLayout jPanelTrenutniKorisnikLayout = new javax.swing.GroupLayout(jPanelTrenutniKorisnik);
        jPanelTrenutniKorisnik.setLayout(jPanelTrenutniKorisnikLayout);
        jPanelTrenutniKorisnikLayout.setHorizontalGroup(
            jPanelTrenutniKorisnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrenutniKorisnikLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanelTrenutniKorisnikLayout.setVerticalGroup(
            jPanelTrenutniKorisnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTrenutniKorisnikLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelTrenutniKorisnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCurrentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tblUsluga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUsluga);

        btnPonisti.setText("Ponisti");
        btnPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPonistiActionPerformed(evt);
            }
        });

        btnIzaberi.setText("Izaberi");
        btnIzaberi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel2.setText("Filter:");

        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelTrenutniKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnPonisti, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnIzaberi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTrenutniKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPonisti)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzaberi))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPonistiActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnPonistiActionPerformed

    private void btnIzaberiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiActionPerformed
        int row = tblUsluga.getSelectedRow();
        if (row != -1) {
            ModelTabeleUsluga mtu = (ModelTabeleUsluga) tblUsluga.getModel();
            Usluga u = mtu.getListaUsluga().get(row);
            if(u == null){
                JOptionPane.showMessageDialog(this, "Usluga nije pronadjena!", "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Kontroler.getInstance().getMapa().put("izabrana_usluga", u);
            if (Kontroler.getInstance().getTipKorisnika() == TipKorisnika.ADMINISTRATOR) {
                JOptionPane.showMessageDialog(this, "Prikaz podataka o usluzi sa ID-jem: " + u.getUslugaID());
                new FUsluga(null, true, FormMode.VIEW).setVisible(true);
            }else{
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Usluga nije izabrana!");
        }
    }//GEN-LAST:event_btnIzaberiActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblUsluga.getSelectedRow();
        if (row != -1) {
            ModelTabeleUsluga mtu = (ModelTabeleUsluga) tblUsluga.getModel();
            Usluga u = mtu.getListaUsluga().get(row);
            ServerskiOdgovor so = Kontroler.getInstance().obrisiUslugu(u);
            if(!so.isUspesno()){
                JOptionPane.showMessageDialog(this, so.getPoruka(), "Greska", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, so.getPoruka(), "Brisanje usluge", JOptionPane.INFORMATION_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Usluga nije izabrana!");
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        podesiPopunjavanjeTabele();
    }//GEN-LAST:event_formWindowActivated

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased
        String filter = txtFilter.getText().trim();
        VrstaUsluge vu = null;
        if (Kontroler.getInstance().getTipKorisnika() == TipKorisnika.CLAN) {
            vu = (VrstaUsluge) Kontroler.getInstance().getMapa().get("izabrana_vrsta");
        }
        Usluga u = new Usluga();
        u.setNaziv(filter);
        u.setOpis(filter);
        u.setVrstaUsluge(vu);

        List<Usluga> lista = Kontroler.getInstance().vratiUsluge(u);
        ModelTabeleUsluga mtu = (ModelTabeleUsluga) tblUsluga.getModel();
        mtu.setListaUsluga(lista);

    }//GEN-LAST:event_txtFilterKeyReleased

    private void podesiFormu() {
        setLocationRelativeTo(null);
        postaviKorisnika();
        prilagodiDugmiceForme();

    }

    private void srediTabeluUsluga() {
        ModelTabeleUsluga mtu = new ModelTabeleUsluga();
        tblUsluga.setModel(mtu);
    }

    private void popuniTabeluUsluga() {
        ModelTabeleUsluga mtu = (ModelTabeleUsluga) tblUsluga.getModel();
        List<Usluga> lista = Kontroler.getInstance().vratiUsluge(new Usluga());
        mtu.setListaUsluga(lista);

    }

    private void porukaOPrikazuListeUsluga() {
        JOptionPane.showMessageDialog(this, "Prikaz liste usluga", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
    }

    private void prilagodiDugmiceForme() {
        if (Kontroler.getInstance().getTipKorisnika() == TipKorisnika.CLAN) {
            btnObrisi.setVisible(false);
        } else {
            btnObrisi.setVisible(true);
        }
    }

    private void postaviKorisnika() {
        if (Kontroler.getInstance().getTipKorisnika() == TipKorisnika.ADMINISTRATOR) {
            Administrator a = (Administrator) Kontroler.getInstance().getMapa().get("admin");
            txtCurrentUser.setText(a.toString());
        } else {
            Clan c = (Clan) Kontroler.getInstance().getMapa().get("clan");
            txtCurrentUser.setText(c.toString());
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzaberi;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPonisti;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelTrenutniKorisnik;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsluga;
    private javax.swing.JTextField txtCurrentUser;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables

    private void podesiPopunjavanjeTabele() {
        if (Kontroler.getInstance().getTipKorisnika() == TipKorisnika.CLAN) {
            popuniTabeluUslugaNaOsnovuVrste();
        } else {
            popuniTabeluUsluga();
        }
    }

    private void popuniTabeluUslugaNaOsnovuVrste() {
        VrstaUsluge vu = (VrstaUsluge) Kontroler.getInstance().getMapa().get("izabrana_vrsta");
        Usluga u = new Usluga();
        u.setVrstaUsluge(vu);
        List<Usluga> lista = Kontroler.getInstance().vratiUsluge(u);

        ModelTabeleUsluga mtu = (ModelTabeleUsluga) tblUsluga.getModel();
        mtu.setListaUsluga(lista);
    }
    
}
